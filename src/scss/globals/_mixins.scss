@use './colors' as *;
@use '../variables' as *;

@mixin max-size($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin min-size($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

@mixin color-scheme($bg, $text) {
  color: $text;
  background-color: $bg;
}

@mixin rotate($deg: 45deg) {
  transform: rotate($deg);
}

@mixin grid($amount: 3, $gap: 16px) {
  display: grid;
  grid-template-columns: repeat($amount, 1fr);
  gap: $gap;
}

@mixin chevron($size: 7px, $weight: 2px, $color: $color-primary, $dir: up) {
  width: $size;
  height: $size;
  border: $weight solid $color;
  display: flex;

  @media (prefers-color-scheme: dark) {
    border-color: $color-primary-light;
  }

  @include rotate;

  transform-origin: 70%;

  @if $dir == right {
    border-bottom: transparent;
    border-left: transparent;
  } @else if $dir == down {
    border-top: transparent;
    border-left: transparent;
  } @else if $dir == up {
    border-bottom: transparent;
    border-right: transparent;
  } @else if $dir == left {
    border-top: transparent;
    border-right: transparent;
  }
}

@mixin outline($color: $color-hilight, $size: 2px) {
  outline: $size solid $color;

  @media (prefers-color-scheme: dark) {
    outline: $size solid $color-secondary-dark;
  }
}

@mixin animation($name, $duration: $animation-duration, $timing: ease-in-out) {
  animation: $name $duration $timing forwards;

  @media (prefers-reduced-motion) {
    animation-name: none;
  }
}

@mixin transition($what: all, $time: 0.3s, $how: ease-in-out) {
  transition: $what $time $how;

  @media (prefers-reduced-motion) {
    transition: none;
  }
}
